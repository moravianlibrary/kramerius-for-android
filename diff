diff --git a/app/src/main/java/cz/mzk/kramerius/app/adapter/PageViewPagerAdapter.java b/app/src/main/java/cz/mzk/kramerius/app/adapter/PageViewPagerAdapter.java
index a772076..b1eb5e8 100644
--- a/app/src/main/java/cz/mzk/kramerius/app/adapter/PageViewPagerAdapter.java
+++ b/app/src/main/java/cz/mzk/kramerius/app/adapter/PageViewPagerAdapter.java
@@ -2,23 +2,31 @@ package cz.mzk.kramerius.app.adapter;
 
 import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
+import java.util.Set;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
+import android.util.Log;
 import android.view.ViewGroup;
 import cz.mzk.androidzoomifyviewer.viewer.TiledImageView.ViewMode;
 import cz.mzk.kramerius.app.model.Item;
 import cz.mzk.kramerius.app.viewer.SinglePageViewerFragment;
+import cz.mzk.kramerius.app.xml.AltoParser;
 
 public class PageViewPagerAdapter  extends FragmentStatePagerAdapter {
 
+    private static final String TAG = PageViewPagerAdapter.class.getSimpleName();
+
 	private List<Item> mPages;
 	private String mDomain;
 	private int mBackground;
 	private ViewMode mViewMode;
 	
-	HashMap<Integer, SinglePageViewerFragment> mPageReferenceMap;
+	//HashMap<Integer, SinglePageViewerFragment> mPageReferenceMap;
+    //todo: tohle se bude uchovavat v aktivite, protoze pri zmene orientace se znovu vytvari aktivita
+    private Map<Integer, Set<AltoParser.TextBox>> mTextboxMap;
 	
     
 	public PageViewPagerAdapter(FragmentManager fragmentManager, String domain, List<Item> pages, int bgColor, ViewMode viewMode) {
@@ -27,7 +35,8 @@ public class PageViewPagerAdapter  extends FragmentStatePagerAdapter {
         mDomain = domain;
         mBackground = bgColor;
         mViewMode = viewMode;
-        mPageReferenceMap = new HashMap<Integer, SinglePageViewerFragment>();
+        //mPageReferenceMap = new HashMap<Integer, SinglePageViewerFragment>();
+        mTextboxMap = new HashMap<>();
     }
 
     @Override
@@ -39,12 +48,12 @@ public class PageViewPagerAdapter  extends FragmentStatePagerAdapter {
     	
     }
 
-
-    public SinglePageViewerFragment getFragment(int key) {
+    //proc, kdyz existuje metoda getItem?
+    /*public SinglePageViewerFragment getFragment(int key) {
     	return mPageReferenceMap.get(key);
-    }    
+    }*/
     
-    @Override
+    /*@Override
     public void destroyItem(ViewGroup container, int position, Object object) {
         super.destroyItem(container, position, object);
         SinglePageViewerFragment f = mPageReferenceMap.get(position); 
@@ -52,25 +61,61 @@ public class PageViewPagerAdapter  extends FragmentStatePagerAdapter {
         	f.onDestroy();
         }
         mPageReferenceMap.remove(position);
-    }
-    
+    }*/
+
+    //neni tohle memory leak? furt se vytvareji nove instance. mozna zamer
     @Override
     public Fragment getItem(int position) {
     	SinglePageViewerFragment fragment = SinglePageViewerFragment.newInstance(mDomain, mPages.get(position).getPid(), mBackground, mViewMode);
+        fragment.setTextBoxes(mTextboxMap.get(position));
     	//mPageReferenceMap.put(position, fragment);
     	return fragment;
     }
+
+    /*@Override
+    public Fragment getItem(int position) {
+        SinglePageViewerFragment fragment = mPageReferenceMap.get(position);
+        if(fragment == null){
+            fragment = SinglePageViewerFragment.newInstance(mDomain, mPages.get(position).getPid(), mBackground, mViewMode);
+        }
+
+        //SinglePageViewerFragment
+        fragment.setTextBoxes(mTextboxMap.get(position));
+        //mPageReferenceMap.put(position, fragment);
+        return fragment;
+    }*/
     
-    @Override
+    /*@Override
     public Object instantiateItem(ViewGroup container, int position) {
     	SinglePageViewerFragment fragment = (SinglePageViewerFragment) super.instantiateItem(container, position);
     	mPageReferenceMap.put(position, fragment);
         return fragment;
-    }
+    }*/
 
     public void refreshFragment() {
     	
     }
+
+    public void setTextBoxes(int position, Set<AltoParser.TextBox> boxes){
+        if(boxes!=null) {
+            Log.i(TAG, String.format("setting text boxes for page %d, boxes: %d", position, boxes.size()));
+        }else{
+            Log.i(TAG, String.format("setting text boxes for page %d, boxes: null", position));
+        }
+
+        //cislovani stranek vypada v poradku
+        //mTextboxMap.put(position-1, boxes);
+        mTextboxMap.put(position, boxes);
+        //mTextboxMap.put(position+1, boxes);
+
+
+
+        getFragment(position).setTextBoxes(boxes);
+        ((SinglePageViewerFragment)getItem(position)).setTextBoxes(boxes);
+        //((SinglePageViewerFragment)getItem(position+1)).setTextBoxes(boxes);
+        //((SinglePageViewerFragment)getItem(position-1)).setTextBoxes(boxes);
+
+    }
     
     @Override
     public CharSequence getPageTitle(int position) {
diff --git a/app/src/main/java/cz/mzk/kramerius/app/ui/PageActivity.java b/app/src/main/java/cz/mzk/kramerius/app/ui/PageActivity.java
index 3d5950c..3e679a6 100644
--- a/app/src/main/java/cz/mzk/kramerius/app/ui/PageActivity.java
+++ b/app/src/main/java/cz/mzk/kramerius/app/ui/PageActivity.java
@@ -9,6 +9,7 @@ import java.net.HttpURLConnection;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Set;
 
 import android.content.ContentValues;
 import android.content.Context;
@@ -27,6 +28,7 @@ import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBarDrawerToggle;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
+import android.text.InputType;
 import android.util.Log;
 import android.util.Pair;
 import android.view.KeyEvent;
@@ -69,8 +71,8 @@ import cz.mzk.kramerius.app.util.TextUtil;
 import cz.mzk.kramerius.app.util.VersionUtils;
 import cz.mzk.kramerius.app.viewer.PdfViewerFragment;
 import cz.mzk.kramerius.app.viewer.PdfViewerFragment.PdfListener;
-import cz.mzk.kramerius.app.viewer.SinglePageViewerFragment;
 import cz.mzk.kramerius.app.viewer.SinglePageViewerFragment.PageEventListener;
+import cz.mzk.kramerius.app.xml.AltoParser;
 
 public class PageActivity extends AppCompatActivity implements OnClickListener, OnSeekBarChangeListener,
 		OnPageNumberSelected, ViewerMenuListener, PageEventListener, PdfListener {
@@ -388,7 +390,7 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 		}
 		refreshPageNavigation();
 	}
-	
+
 	private void refreshPageNavigation() {
 		if(mPageList == null) {
 			return;
@@ -552,13 +554,13 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 		}
 	}
 
-	
+
 	@Override
 	public void onResume() {
 	    super.onResume();
 	    setToolbarTitle();
 	}
-	
+
 	private void setToolbarTitle() {
 		if(mToolbar == null || mTitle == null) {
 			return;
@@ -570,7 +572,7 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 			mToolbar.setTitle(mTitle);
 		}
 	}
-	
+
 	private void init() {
 		setToolbarTitle();
 		String bgColorValue = PreferenceManager.getDefaultSharedPreferences(this).getString(
@@ -581,13 +583,13 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 		} else if ("black".equals(bgColorValue)) {
 			color = Color.BLACK;
 		}
-		
+
 		if(mIsPdf) {
 			mPdfViewerFragment = (PdfViewerFragment) getFragmentManager().findFragmentById(R.id.fragmentPdfViewer);
 			mPdfViewerContainer.setVisibility(View.VISIBLE);
 			mPdfViewerFragment.setBackgroundColor(color);
 			mPdfViewerFragment.setEventListener(this);
-			mPdfViewerFragment.populate(mCurrentPage);						
+			mPdfViewerFragment.populate(mCurrentPage);
 		} else {
 			ViewMode viewMode = ViewMode.FIT_TO_SCREEN;
 			mViewPager = (ViewPager) findViewById(R.id.viewPager);
@@ -596,9 +598,9 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 					viewMode);
 			mViewPager.setAdapter(mPagerAdapter);
 			mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
-	
+
 				@Override
-				public void onPageSelected(int index) {					
+				public void onPageSelected(int index) {
 					mCurrentPage = index;
 					loadPage(true);
 					/*if(mPagerAdapter != null) {
@@ -608,20 +610,20 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 						}
 					}*/
 				}
-	
+
 				@Override
 				public void onPageScrolled(int arg0, float arg1, int arg2) {
 					// TODO Auto-generated method stub
-	
+
 				}
-	
+
 				@Override
 				public void onPageScrollStateChanged(int arg0) {
 					// TODO Auto-generated method stub
-	
+
 				}
 			});
-	
+
 			loadPage();
 		}
 		if (mIsPdf) {
@@ -637,10 +639,10 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 		mSeekBar.setMax(mPageList.size() - 1);
 		mSeekBar.setProgress(mCurrentPage);
 		mViewerWrapper.setVisibility(View.VISIBLE);
-	
 
-			
-		
+
+
+
 		//if (PrefUtils.isFirstViewerVisit(this)) {
 		//	new MaterialDialog.Builder(this).title(R.string.dialog_viewer_first_visit_title)
 		//			.content(R.string.dialog_viewer_first_visit_content).positiveText(R.string.gen_ok).build().show();
@@ -1214,14 +1216,13 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 	@Override
 	public void onPdfPageChanged(int index) {
 		mCurrentPage = index;
-		refreshPageNavigation();		
+		refreshPageNavigation();
 	}
 
 
 	@Override
-	public void onPdfReady() {		
+	public void onPdfReady() {
 		refreshPageNavigation();
-		
 	}
 
 
@@ -1231,4 +1232,47 @@ public class PageActivity extends AppCompatActivity implements OnClickListener,
 		setFullscreen(mFullscreen);
 	}
 
+	@Override
+	public void onSearch() {
+		closeSlidingMenu();
+		if (mCurrentPage < mPageList.size()) {
+			new com.afollestad.materialdialogs.MaterialDialog.Builder(this)
+					.title(R.string.dialog_search_on_page_title)
+                    .neutralText(R.string.gen_cancel)
+					.positiveText(R.string.gen_search)
+                    .cancelable(true)
+					.inputType(InputType.TYPE_CLASS_TEXT)
+					.input(getResources().getString(R.string.dialog_search_on_page_hint),null, new com.afollestad.materialdialogs.MaterialDialog.InputCallback() {
+						@Override
+						public void onInput(com.afollestad.materialdialogs.MaterialDialog dialog, CharSequence input) {
+							if (input.length() != 0) {
+								searchOnPage(input.toString());
+							}
+						}
+					}).show();
+		}
+	}
+
+	private void searchOnPage(final String query){
+
+
+		final String pagePid =
+		mPageList.get(mCurrentPage).getPid();
+
+		new AsyncTask<Void, Void, Set<AltoParser.TextBox>>(){
+
+			@Override
+			protected Set<AltoParser.TextBox> doInBackground(Void... params) {
+				return K5ConnectorFactory.getConnector().getTextBoxes(PageActivity.this, pagePid,query);
+			}
+
+			@Override
+			protected void onPostExecute(Set<AltoParser.TextBox> textBoxes) {
+				if(textBoxes!=null && !textBoxes.isEmpty()){
+					mPagerAdapter.setTextBoxes(mCurrentPage, textBoxes);
+				}
+
+			}
+		}.execute();
+    }
 }
diff --git a/app/src/main/java/cz/mzk/kramerius/app/ui/ViewerMenuFragment.java b/app/src/main/java/cz/mzk/kramerius/app/ui/ViewerMenuFragment.java
index 6e37aa4..1b0d712 100644
--- a/app/src/main/java/cz/mzk/kramerius/app/ui/ViewerMenuFragment.java
+++ b/app/src/main/java/cz/mzk/kramerius/app/ui/ViewerMenuFragment.java
@@ -14,6 +14,8 @@ import android.view.ViewGroup;
 import android.widget.AdapterView;
 import android.widget.ImageView;
 import android.widget.ListView;
+import android.widget.Toast;
+
 import cz.mzk.kramerius.app.R;
 import cz.mzk.kramerius.app.adapter.ViewerMenuArrayAdapter;
 import cz.mzk.kramerius.app.api.K5Api;
@@ -42,6 +44,7 @@ public class ViewerMenuFragment extends Fragment implements OnClickListener {
 	private MenuItemWidget mDownload;
 	private boolean mScreenLock = false;
 	private MenuItemWidget mScreenLockView;
+	private MenuItemWidget mSearch;
 	
 	private int mDownloadType = DOWNLOAD_NOTHING;
 
@@ -64,6 +67,8 @@ public class ViewerMenuFragment extends Fragment implements OnClickListener {
 		mDownload.setOnClickListener(this);
 		mScreenLockView = (MenuItemWidget) view.findViewById(R.id.menu_screen_lock);
 		mScreenLockView.setOnClickListener(this);
+		mSearch = (MenuItemWidget) view.findViewById(R.id.menu_search_on_page);
+		mSearch.setOnClickListener(this);
 		refreshDownloadType();
 		mListView = (ListView) view.findViewById(R.id.menu_list);
 		populateMenuList();
@@ -146,6 +151,8 @@ public class ViewerMenuFragment extends Fragment implements OnClickListener {
 
 		public void onDownload();
 
+		public void onSearch();
+
 	}
 
 	@Override
@@ -173,6 +180,9 @@ public class ViewerMenuFragment extends Fragment implements OnClickListener {
 				Analytics.sendEvent(getActivity(), "page_menu", "action", "Download");
 				mCallback.onDownload();
 			}
+		} else if (v == mSearch){
+			// TODO: 19.11.15 Analytics event?
+			mCallback.onSearch();
 		}
 	}
 
diff --git a/app/src/main/java/cz/mzk/kramerius/app/view/PageViewPager.java b/app/src/main/java/cz/mzk/kramerius/app/view/PageViewPager.java
index 8249b50..08c877e 100644
--- a/app/src/main/java/cz/mzk/kramerius/app/view/PageViewPager.java
+++ b/app/src/main/java/cz/mzk/kramerius/app/view/PageViewPager.java
@@ -34,7 +34,8 @@ public class PageViewPager extends ViewPager {
 			return false;
 		}
 		PageViewPagerAdapter adapter =  (PageViewPagerAdapter) getAdapter();
-		SinglePageViewerFragment fragmanet = adapter.getFragment(c);
+		//SinglePageViewerFragment fragmanet = adapter.getFragment(c);
+		SinglePageViewerFragment fragmanet =(SinglePageViewerFragment)adapter.getItem(c);
 		if(fragmanet == null) {
 			return true;
 		}
diff --git a/app/src/main/java/cz/mzk/kramerius/app/viewer/SinglePageViewerFragment.java b/app/src/main/java/cz/mzk/kramerius/app/viewer/SinglePageViewerFragment.java
index 53fb605..6d9740d 100644
--- a/app/src/main/java/cz/mzk/kramerius/app/viewer/SinglePageViewerFragment.java
+++ b/app/src/main/java/cz/mzk/kramerius/app/viewer/SinglePageViewerFragment.java
@@ -20,12 +20,18 @@ import com.android.volley.VolleyError;
 import com.android.volley.toolbox.ImageRequest;
 import com.polites.android.GestureImageView;
 
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Set;
+
+import cz.mzk.androidzoomifyviewer.rectangles.FramingRectangle;
 import cz.mzk.androidzoomifyviewer.viewer.TiledImageView;
 import cz.mzk.androidzoomifyviewer.viewer.TiledImageView.ImageInitializationHandler;
 import cz.mzk.androidzoomifyviewer.viewer.TiledImageView.SingleTapListener;
 import cz.mzk.androidzoomifyviewer.viewer.TiledImageView.ViewMode;
 import cz.mzk.kramerius.app.R;
 import cz.mzk.kramerius.app.util.VersionUtils;
+import cz.mzk.kramerius.app.xml.AltoParser;
 
 public class SinglePageViewerFragment extends Fragment implements OnTouchListener, ImageInitializationHandler,
 		SingleTapListener {
@@ -48,12 +54,12 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 
 	private ImageRequest mImageRequest;
 	private ViewMode mViewMode;
-	
+
 	private float mInitialImageScale = -1;
 
-	
+
 	public interface PageEventListener {
-		
+
 		public void onAccessDenied();
 
 		public void onNetworkError(Integer statusCode);
@@ -62,8 +68,8 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 
 		public void onSingleTap(float x, float y, Rect boundingBox);
 	}
-		
-	
+
+
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
@@ -86,6 +92,7 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+		Log.d(TAG, "onCreateView");
 		View view = inflater.inflate(R.layout.fragment_single_page_viewer, container, false);
 		mContainer = view.findViewById(R.id.container);
 		mContainer.setOnTouchListener(this);
@@ -100,12 +107,12 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 		showPage();
 		return view;
 	}
-	
+
 	public void invalidateViewer() {
 		if(mTiledImageView == null) {
 			return;
 		}
-		mTiledImageView.postInvalidateDelayed(100);		
+		mTiledImageView.postInvalidateDelayed(100);
 	}
 
 	@Override
@@ -118,7 +125,7 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 		}
 	}
 
-	public boolean isSwipeEnabled() {		
+	public boolean isSwipeEnabled() {
 		if(mGestureImageView != null) {
 			float scale = mGestureImageView.getScale();
 			if(scale == 1.0f) {
@@ -129,9 +136,9 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 					return true;
 				}
 			}
-			return mInitialImageScale == -1 || scale <= mInitialImageScale;			
+			return mInitialImageScale == -1 || scale <= mInitialImageScale;
 		}
-		if(mTiledImageView == null) {			
+		if(mTiledImageView == null) {
 			return true;
 		}
 		return mTiledImageView.getInitialScaleFactor() >= mTiledImageView.getTotalScaleFactor();
@@ -174,6 +181,7 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 		mTiledImageView.loadImage(url.toString());
 	}
 
+	// TODO: 1.12.15 Move to K5Api
 	private String buildZoomifyBaseUrl(String pid) {
 		StringBuilder builder = new StringBuilder();
 		builder.append("http://");
@@ -236,7 +244,7 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 	private void inflateImage(Bitmap bitmap) {
 		if (getActivity() == null) {
 			return;
-		}		
+		}
 		mInitialImageScale = -1;
 		mImageViewContainer.removeAllViews();
 		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
@@ -245,9 +253,9 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 		mGestureImageView.setImageBitmap(bitmap);
 		mGestureImageView.setLayoutParams(params);
 		mGestureImageView.setOnTouchListener(this);
-		
+
 		mImageViewContainer.addView(mGestureImageView);
-		mImageViewContainer.setVisibility(View.VISIBLE);		
+		mImageViewContainer.setVisibility(View.VISIBLE);
 	}
 
 	private void loadPageImageFromDatastream() {
@@ -335,6 +343,25 @@ public class SinglePageViewerFragment extends Fragment implements OnTouchListene
 		return "";
 	}
 
+	public void setTextBoxes(Set<AltoParser.TextBox> boxes){
+		Log.v(TAG, "setTextBoxes");
+		if(mTiledImageView != null) {
+			if (boxes == null) {
+				Log.v(TAG, "boxes is null");
+				mTiledImageView.setFramingRectangles(null);
+			} else {
+				List<FramingRectangle> rects = new ArrayList<>(boxes.size());
+				for (AltoParser.TextBox box : boxes) {
+					rects.add(new FramingRectangle(box.getRectangle(), new FramingRectangle.Border(R.color.text_box_border, 2), R.color.text_box_filling));
+				}
+				Log.v(TAG, String.format("framing rectangles: %d", rects.size()));
+				mTiledImageView.setFramingRectangles(rects);
+			}
+		}else{
+			Log.w(TAG, "mTiledImageView is null");
+		}
+	}
+
 	private void setViewMode(ViewMode mode) {
 		mTiledImageView.setViewMode(mode);
 	}
diff --git a/app/src/main/res/layout/fragment_single_page_viewer.xml b/app/src/main/res/layout/fragment_single_page_viewer.xml
index 1d880b1..cbc92e1 100644
--- a/app/src/main/res/layout/fragment_single_page_viewer.xml
+++ b/app/src/main/res/layout/fragment_single_page_viewer.xml
@@ -4,7 +4,10 @@
     android:id="@+id/container"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:layout_gravity="center" >
+    android:layout_gravity="center"
+    android:background="#bbffaa"
+    android:padding="5dp"
+    >
 
     <RelativeLayout
         android:id="@+id/progressView"
diff --git a/app/src/main/res/layout/fragment_viewer_menu.xml b/app/src/main/res/layout/fragment_viewer_menu.xml
index c6e22d5..e7b39c8 100644
--- a/app/src/main/res/layout/fragment_viewer_menu.xml
+++ b/app/src/main/res/layout/fragment_viewer_menu.xml
@@ -66,6 +66,16 @@
             kramerius:menuIconSelected="@drawable/ic_screen_lock_rotation_green"
             kramerius:menuTitle="@string/viewer_menu_screen_lock" />
 
+        <cz.mzk.kramerius.app.view.MenuItemWidget
+            android:id="@+id/menu_search_on_page"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/button_menu"
+            android:clickable="true"
+            kramerius:menuIcon="@drawable/ic_search_grey"
+            kramerius:menuIconSelected="@drawable/ic_search_green"
+            kramerius:menuTitle="@string/viewer_menu_search" />
+
         <View
             android:layout_width="match_parent"
             android:layout_height="1dp"
diff --git a/app/src/main/res/values-cs/strings.xml b/app/src/main/res/values-cs/strings.xml
index 6388bfd..4056f60 100644
--- a/app/src/main/res/values-cs/strings.xml
+++ b/app/src/main/res/values-cs/strings.xml
@@ -190,8 +190,11 @@
     <string name="dialog_download_pdf_title">Stáhnout dokument</string>
  	<string name="dialog_download_pdf_content">PDF dokument bude stažen do adresáře Kramerius.\nPřejete si stáhnout dokument?</string>
     <string name="dialog_download_pdf_private_title">Nepřístupný dokument</string>
- 	<string name="dialog_download_pdf_private_content">PDF dokument není veřejně přístupný. Litujeme, ale dokument není možné stáhnout.</string> 	    
-    
+ 	<string name="dialog_download_pdf_private_content">PDF dokument není veřejně přístupný. Litujeme, ale dokument není možné stáhnout.</string>
+
+    <string name="dialog_search_on_page_title">Hledání na stránce</string>
+    <string name="dialog_search_on_page_hint">Zadejte hledaný výraz</string>
+
     <string name="dialog_viewer_first_visit_title">Tip</string>
     <string name="dialog_viewer_first_visit_content">Tapnutím doprostřed obrazovky vypnete/zapnete celoobrazovkový režim.\n\nPřechod na předchozí/další stránku provedete tapnutím do levé/pravé části obrazovky nebo hardwarovými tlačíty pro ovládání hlasitosti.</string>
  	
@@ -200,6 +203,7 @@
     <string name="viewer_menu_settings">Nastavení</string>    
     <string name="viewer_menu_recent">Naposledy otevřené</string>
     <string name="viewer_menu_screen_lock">Zámek obrazovky</string>
+    <string name="viewer_menu_search">Hledat na stránce</string>
     <string name="viewer_menu_download">Stáhnout stránku</string>
     <string name="viewer_menu_download_pdf">Stáhnou dokument</string>
     
@@ -228,6 +232,7 @@
     <string name="gen_no">Ne</string>
     <string name="gen_again">Opakovat</string>
     <string name="gen_cancel">Zrušit</string>
+    <string name="gen_search">Hledat</string>
     
     
     <string name="warn_data_loading_failed">Nepodařilo se načíst data.</string>
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
index 0b7bf75..32b951b 100755
--- a/app/src/main/res/values/colors.xml
+++ b/app/src/main/res/values/colors.xml
@@ -65,7 +65,9 @@
     <color name="track_rv_inactive_presed">#f8f8f8</color>
     <color name="track_rv_active">#f3f3f3</color>
 
-
+    <!-- text boxes for visualising search results -->
+    <color name="text_box_filling">#603AAFDE</color>
+    <color name="text_box_border">#3AAFDE</color>
 
 
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index c7866d9..0deb63b 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -192,8 +192,11 @@
     <string name="dialog_download_pdf_title">Download document</string>
  	<string name="dialog_download_pdf_content">The PDF document will be downloaded to the Kramerius folder.\nWould you like to download the document?</string>
     <string name="dialog_download_pdf_private_title">Inaccessible document</string>
- 	<string name="dialog_download_pdf_private_content">The PDF document is publicly inaccessible.\nWe are sorry, the document cannot be downloaded.</string> 	    
- 		
+ 	<string name="dialog_download_pdf_private_content">The PDF document is publicly inaccessible.\nWe are sorry, the document cannot be downloaded.</string>
+
+    <string name="dialog_search_on_page_title">Search on page</string>
+    <string name="dialog_search_on_page_hint">Enter expression</string>
+
     <string name="dialog_viewer_first_visit_title">Hint</string>
  	<string name="dialog_viewer_first_visit_content">To turn on/off the fullscreen mode, tap to the middle of the screen.\n\nTo go to the previous/next page, tap to the left/right edge of the screen or use volume up/down hardware buttons.</string>
     	
@@ -202,6 +205,7 @@
     <string name="viewer_menu_settings">Settings</string>    
     <string name="viewer_menu_recent">Recent</string>
     <string name="viewer_menu_screen_lock">Screen Lock</string>
+    <string name="viewer_menu_search">Search on page</string>
     <string name="viewer_menu_download">Download Page</string>
     <string name="viewer_menu_download_pdf">Download document</string>
         
@@ -227,6 +231,7 @@
     <string name="gen_no">No</string>
     <string name="gen_again">Again</string>
     <string name="gen_cancel">Cancel</string>
+    <string name="gen_search">Search</string>
     
     <string name="warn_data_loading_failed">Failed to load data.</string>
 	<string name="warn_pdf_loading_failed">Failed to load the PDF document.</string>
